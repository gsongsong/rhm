{"version":3,"sources":["constants.ts","utils.ts","components/EnumTable.tsx","components/PkgTable.tsx","components/VersionTable.tsx","components/AppMenu.tsx","components/ChangePerReleaseTable.tsx","components/ReleaseTable.tsx","components/ChangeTable.tsx","init.ts","App.tsx","reportWebVitals.js","index.js"],"names":["formAfterChange","formAfterChangeNew","formBeforeChange","formBeforeChangeNew","formCustomerIndexList","formDescription","formDescriptionNew","formLineup","formLineupNew","formName","formNameNew","formPrevious","formPreviousNew","formVersion","invalidSortable","keyActions","keyAfterChange","keyBeforeChange","keyChanges","keyCustomers","keyDescription","keyDragHandle","keyHistory","keyLineup","keyName","keyPackage","keyPrevious","keyReleases","keyVersion","keyVersions","parenGlobal","parenNone","parenError","titleActions","titleAfterChange","titleBeforeChange","titleCustomers","titleDescription","titleLineup","titlePackage","titlePrevious","titleVersion","accumulateChangeList","changeListAccumulated","customerIndex","versionList","indexPrev","lineupIndex","versionNext","find","version","index","changeList","releaseList","release","customerIndexList","includes","forEach","customerIndexListPerChangeList","unshift","filter","change","customerIndexListPerChange","i","changeSource","slice","item","splice","length","accumulateVersionIndex","versionIndex","versionIndexList","versionFound","push","findEmptyIndex","indexList","sort","a","b","reduce","indent","input","replace","publishPerCustomer","lineupList","pkgList","customer","candidateLineupIndexList","map","lineup","releaseHistoryPerLineupList","releaseHistory","publishPerLineup","releaseHistoryPerLineup","lineupFound","lineupName","name","join","changeListPerPkgList","releaseFound","pkgIndex","pkg","pkgFound","pkgName","pkgLineupIndex","undefined","changeListPerPkg","changes","description","beforeChange","afterChange","listToChanges","trim","EnumTable","title","enumList","onChange","usedIndexList","useForm","form","useState","editIndex","setEditIndex","columns","key","dataIndex","column","onCell","record","addEnumItem","validateFields","then","getFieldValue","enumItem","enumListNew","localeCompare","setFieldsValue","catch","reason","console","error","onSubmitRename","nameNew","indexFound","findIndex","dataSource","components","body","cell","children","restProps","onFinish","Item","rules","required","help","disabled","onClick","PlusOutlined","CheckOutlined","CloseOutlined","onClickEdit","EditOutlined","removeEnumItem","DeleteOutlined","pagination","size","Option","Select","PkgTable","usedPkgIndexList","useEffect","addPkg","getFieldsValue","pkgListNew","onSubmitEditPkg","lineupIndexNew","lineupNew","package","initialValue","value","icon","removePkg","VersionTable","onPublish","onSelect","addVersion","previous","versionListNew","onSubmitEditVersion","previousNew","usedVersionIndexList","uniq","removeVersion","onClickPublish","ExportOutlined","AppMenu","file","customerList","onNew","onLoad","refLoad","createRef","refSave","featureName","setFeatureName","reader","FileReader","onload","e","result","target","indexLast","lastIndexOf","substring","parsed","JSON","parse","versionName","versionIndexPrev","changeIndex","targetCustomerList","targetCustomer","releaseIndex","customerName","customerIndexListPerChangeFound","load","mode","selectable","FileOutlined","current","click","FolderOpenOutlined","blob","Blob","stringify","type","download","href","window","URL","createObjectURL","onClickSave","SaveOutlined","accept","hidden","ref","files","readAsText","Text","Typography","ChangePerReleaseTable","editVersionIndex","setEditVersionIndex","editChangeIndex","setEditChangeIndex","onCancelEdit","changeListFiltered","changeListPrev","changeListCurr","versionIndexOfChange","customerIndexListPerRelease","customerListPerRelease","colSpan","allowClear","filterOption","option","toLocaleLowerCase","indexOf","versionOfChangeFound","customerIndexListRaw","customerIndexListPerChangeListNew","onSubmitChange","color","content","PopoverContent","customerFound","strong","cols","autoSize","ReleaseTable","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","width","addRelease","releaseListNew","onChangeCustomerIndexListPerChangeList","onSubmitEditRelease","pkgIndexNew","customerIndexListNew","customers","releaseToDragFound","Number","pkgToDragFound","pkgNameToDrag","lineupIndexToDrag","lineupToDrag","collisionDetection","closestCenter","onDragStart","event","active","id","onDragEnd","over","oldIndex","toString","newIndex","arrayMove","wrapper","props","items","child","strategy","verticalListSortingStrategy","row","style","useSortable","attributes","listeners","setNodeRef","styleRowBold","fontWeight","styleNew","Object","assign","customerTag","removeRelease","MenuOutlined","cursor","expandable","expandedRowRender","rowExpandable","backgroundColor","border","display","alignItems","paddingLeft","ChangeTable","usedChangeIndexWithVersionIndexList","addChange","changeListNew","onSubmitEditChange","descriptionNew","beforeChangeNew","afterChangeNew","verticalAlign","changeFound","removeChange","customerListInit","lineupListInit","pkgListInit","versionListInit","Panel","Collapse","App","setVersionList","setVersionIndex","setLineupList","setPkgList","setCustomerList","modalVisible","setModalVisible","setReleaseHistory","uniqWith","changeIndexListPrev","changeIndexListPerReleaseList","changeIndexListPerReleasePrev","usedLineupIndexList","lineupIndexListPrev","pkgIndexListPrev","usedCustomerIndexList","customerIndexListPrev","customerIndexListPerReleasePrev","customerIndexListPerChangeListPrev","versionCurr","versionPrev","className","span","offset","defaultActiveKey","TabPane","tab","level","header","v1","index1","indexPrev1","v2","index2","indexPrev2","isVersionListCircular","releaseHistoryPerCustomerIndexListList","cil1","rh1","j","cil2","relaseHistoryPerCustomerIndexList","customerNameJoined","publish","direction","marginTop","justifyContent","rel","GithubOutlined","footer","CopyOutlined","visible","onCancel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e148a757.chunk.js","sourcesContent":["export const formAfterChange = \"afterChange\";\nexport const formAfterChangeNew = \"afterChangeNew\";\nexport const formBeforeChange = \"beforeChange\";\nexport const formBeforeChangeNew = \"beforeChangeNew\";\nexport const formCustomerIndexList = \"customerIndexList\";\nexport const formDescription = \"description\";\nexport const formDescriptionNew = \"descriptionNew\";\nexport const formLineup = \"lineup\";\nexport const formLineupNew = \"lineupNew\";\nexport const formName = \"name\";\nexport const formNameNew = \"nameNew\";\nexport const formPrevious = \"previous\";\nexport const formPreviousNew = \"previousNew\";\nexport const formVersion = \"version\";\n\nexport const invalidSortable = \"invalidSortable\";\n\nexport const keyActions = \"actions\";\nexport const keyAfterChange = \"afterChange\";\nexport const keyBeforeChange = \"beforeChange\";\nexport const keyChanges = \"changes\";\nexport const keyCustomers = \"customers\";\nexport const keyDescription = \"description\";\nexport const keyDragHandle = \"dragHandle\";\nexport const keyHistory = \"history\";\nexport const keyLineup = \"lineup\";\nexport const keyLineups = \"lineups\";\nexport const keyName = \"name\";\nexport const keyPackage = \"package\";\nexport const keyPackages = \"packages\";\nexport const keyPrevious = \"previous\";\nexport const keyReleases = \"releases\"\nexport const keyVersion = \"version\";\nexport const keyVersions = \"versions\";\n\nexport const parenGlobal = \"(Global)\";\nexport const parenNone = \"(None)\";\nexport const parenError = \"(Error)\";\n\nexport const titleActions = \"Actions\";\nexport const titleAfterChange = \"After change\";\nexport const titleBeforeChange = \"Before change\";\nexport const titleChanges = \"Changes\";\nexport const titleCustomer =\" Customer\";\nexport const titleCustomers = \"Customers\";\nexport const titleDescription = \"Description\";\nexport const titleHistory = \"History\";\nexport const titleLineup = \"Lineup\";\nexport const titleLineups = \"Lineups\";\nexport const titlePackage = \"Package\";\nexport const titlePackages = \"Packages\";\nexport const titlePrevious = \"Previous\";\nexport const titleReleases = \"Releases\";\nexport const titleVersion = \"Version\";\nexport const titleVersions = \"Versions\";\n","import { uniq } from \"lodash\";\nimport {\n  Change,\n  ChangeV2,\n  Enum,\n  OldCustomer,\n  OldPkg,\n  OldVersion,\n  Pkg,\n  Release,\n  ReleaseV2,\n  Version,\n  VersionV2,\n} from \"./types\";\n\ntype ReleaseHistoryPerCustomerIndexList = {\n  customerIndexList: number[];\n  releaseHistory: string;\n};\n\ntype ReleaseHistoryPerLineupIndex = {\n  lineupIndex: number;\n  releaseHistory: string;\n};\n\ntype ReleaseHistoryPerPkg = {\n  pkgName: string;\n  changeList: ChangeV2[];\n};\n\nfunction accumulateChangeList(\n  changeListAccumulated: ChangeV2[],\n  customerIndex: number,\n  versionList: VersionV2[],\n  indexPrev: number,\n  lineupIndex: number\n) {\n  let versionNext = versionList.find((version) => version.index === indexPrev);\n  while (versionNext) {\n    if (!versionNext) {\n      return versionNext;\n    }\n    const { indexPrev, changeList, releaseList } = versionNext;\n    const releaseFound = releaseList.find((release) =>\n      release.customerIndexList.includes(customerIndex)\n    );\n    if (releaseFound) {\n      break;\n    }\n    // Accumulate all changes of releases in a given version\n    releaseList.forEach((release) => {\n      const { customerIndexListPerChangeList } = release;\n      changeListAccumulated.unshift(\n        ...changeList.filter((change) => {\n          return customerIndexListPerChangeList.find(\n            (customerIndexListPerChange) => {\n              const { customerIndexList } = customerIndexListPerChange;\n              return (\n                change.lineupIndex === lineupIndex &&\n                (customerIndexList.includes(customerIndex) ||\n                  customerIndexList.includes(-1))\n              );\n            }\n          );\n        })\n      );\n    });\n    for (let i = changeListAccumulated.length - 1; i >= 0; i -= 1) {\n      const changeSource = changeListAccumulated[i];\n      const changeTarget = changeListAccumulated.slice(0, i).find((item) => {\n        return item.index === changeSource.index;\n      });\n      if (changeTarget) {\n        changeListAccumulated.splice(i, 1);\n      }\n    }\n    versionNext = versionList.find((version) => version.index === indexPrev);\n  }\n  return versionNext;\n}\n\nexport function accumulateVersionIndex(\n  versionList: VersionV2[],\n  versionIndex: number\n): number[] {\n  const versionIndexList: number[] = [];\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  if (!versionFound) {\n    return versionIndexList;\n  }\n  versionIndexList.push(versionIndex);\n  const { indexPrev } = versionFound;\n  versionIndexList.push(...accumulateVersionIndex(versionList, indexPrev));\n  return versionIndexList;\n}\n\nexport function findEmptyIndex(indexList: number[]) {\n  return indexList\n    .sort((a, b) => a - b)\n    .reduce((indexPrev, index) => {\n      if (index === indexPrev) {\n        return indexPrev + 1;\n      }\n      return indexPrev;\n    }, 0);\n}\n\nexport function getEnumNameList(enumList: Enum[], indexList: number[]) {\n  return enumList\n    .filter((enumItem) => indexList.includes(enumItem.index))\n    .map((enumItem) => enumItem.name);\n}\n\nfunction indent(input: string) {\n  return input.replace(/^/gm, \"    \");\n}\n\nfunction isVersionListCircular(versionList: VersionV2[], index: number) {\n  const versionFound = versionList.find((version) => version.index === index);\n  if (!versionFound) {\n    return false;\n  }\n  let v1: VersionV2 | undefined = versionFound;\n  let { index: index1, indexPrev: indexPrev1 } = v1;\n  let v2: VersionV2 | undefined = versionFound;\n  let { index: index2, indexPrev: indexPrev2 } = v2;\n  while (v1 || v2) {\n    // eslint-disable-next-line no-loop-func\n    v1 = versionList.find((version) => version.index === indexPrev1);\n    if (!v1) {\n      return false;\n    }\n    ({ index: index1, indexPrev: indexPrev1 } = v1);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    if (index1 === index2) {\n      return true;\n    }\n  }\n}\n\nexport function load(input: string) {\n  const parsed = JSON.parse(input);\n  const { versionList, lineupList, pkgList, customerList } = parsed;\n  // Check if it comes from release-history-manager\n  if (versionList[0] && versionList[0].versionIndex !== undefined) {\n    // Migrate\n    const versionListNew: Version[] = (versionList as OldVersion[]).map(\n      (version) => {\n        const {\n          versionIndex: index,\n          versionName: name,\n          versionIndexPrev: indexPrev,\n          changeList,\n          releaseList,\n        } = version;\n        const changeListNew: Change[] = changeList.map((change) => {\n          const {\n            changeIndex: index,\n            description,\n            beforeChange,\n            afterChange,\n            targetCustomerList,\n          } = change;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return {\n            index,\n            description,\n            beforeChange,\n            afterChange,\n            customerIndexList,\n            lineupIndex: -1,\n          };\n        });\n        const releaseListNew: Release[] = releaseList.map((release) => {\n          const { releaseIndex: index, pkgIndex, targetCustomerList } = release;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return { index, pkgIndex, customerIndexList };\n        });\n        return {\n          index,\n          name,\n          indexPrev,\n          changeList: changeListNew,\n          releaseList: releaseListNew,\n        };\n      }\n    );\n    const pkgListNew: Pkg[] = (pkgList as OldPkg[]).map((pkg) => {\n      const { pkgIndex: index, pkgName: name } = pkg;\n      return { index, name, lineupIndex: -1 };\n    });\n    const customerListNew: Enum[] = (customerList as OldCustomer[]).map(\n      (customer) => {\n        const { customerIndex: index, customerName: name } = customer;\n        return { index, name };\n      }\n    );\n    return {\n      versionList: versionListNew,\n      lineupList: [],\n      pkgList: pkgListNew,\n      customerList: customerListNew,\n    };\n  } else {\n    // TODO: Check validity\n  }\n  // Migrate from rhm v1 to v2\n  versionList.forEach((version: Version & VersionV2) => {\n    const { index: versionIndex, changeList, releaseList } = version;\n    releaseList.forEach((release: Release & ReleaseV2) => {\n      release.customerIndexListPerChangeList = release.customerIndexListPerChangeList ?? [];\n    });\n    changeList.forEach((change: Change & ChangeV2) => {\n      const { index: changeIndex, customerIndexList } = change;\n      if (customerIndexList.length) {\n        customerIndexList.forEach((customerIndex) => {\n          const releaseFound = releaseList.find((release) => {\n            const { pkgIndex } = release;\n            return (pkgList as Pkg[]).find((pkg) => {\n              return (\n                pkg.index === pkgIndex && pkg.lineupIndex === change.lineupIndex &&\n                release.customerIndexList.includes(customerIndex)\n              );\n            });\n          });\n          if (releaseFound) {\n            const { customerIndexListPerChangeList } = releaseFound as ReleaseV2;\n            const customerIndexListPerChangeFound = customerIndexListPerChangeList.find((item) => {\n              return item.versionIndex === versionIndex && item.changeIndex === changeIndex;\n            });\n            if (customerIndexListPerChangeFound) {\n              customerIndexListPerChangeFound.customerIndexList = uniq([\n                ...customerIndexListPerChangeFound.customerIndexList,\n                customerIndex,\n              ]);\n            } else {\n              customerIndexListPerChangeList.push({\n                versionIndex, changeIndex, customerIndexList: [customerIndex],\n              });\n            }\n          }\n        });\n      } else {\n        // Global\n        const releaseFound = releaseList.find((release) => {\n          const { pkgIndex } = release;\n          return (pkgList as Pkg[]).find((pkg) => {\n            return (\n              pkg.index === pkgIndex && pkg.lineupIndex === change.lineupIndex\n            );\n          });\n        });\n        if (releaseFound) {\n          const { customerIndexListPerChangeList } = releaseFound as ReleaseV2;\n          const customerIndexListPerChangeFound = customerIndexListPerChangeList.find((item) => {\n            return item.versionIndex === versionIndex && item.changeIndex === changeIndex;\n          });\n          if (customerIndexListPerChangeFound) {\n            customerIndexListPerChangeFound.customerIndexList = [-1];\n          } else {\n            customerIndexListPerChangeList.push({\n              versionIndex, changeIndex, customerIndexList: [-1],\n            });\n          }\n        }\n      }\n    });\n  });\n  // TODO\n  return { versionList, lineupList, pkgList, customerList };\n}\n\nexport function publish(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customerList: Enum[]\n) {\n  if (isVersionListCircular(versionList, versionIndex)) {\n    return;\n  }\n  const releaseHistoryPerCustomerIndexListList: ReleaseHistoryPerCustomerIndexList[] =\n    [];\n  // Generate\n  customerList.forEach((customer) => {\n    releaseHistoryPerCustomerIndexListList.push({\n      customerIndexList: [customer.index],\n      releaseHistory: publishPerCustomer(\n        versionList,\n        versionIndex,\n        lineupList,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  // Merge\n  for (\n    let i = releaseHistoryPerCustomerIndexListList.length - 1;\n    i >= 0;\n    i -= 1\n  ) {\n    const { customerIndexList: cil1, releaseHistory: rh1 } =\n      releaseHistoryPerCustomerIndexListList[i];\n    for (let j = i - 1; j >= 0; j -= 1) {\n      const { customerIndexList: cil2, releaseHistory: rh2 } =\n        releaseHistoryPerCustomerIndexListList[j];\n      if (rh1 === rh2) {\n        cil2.push(...cil1);\n        releaseHistoryPerCustomerIndexListList.splice(i, 1);\n        break;\n      }\n    }\n  }\n  // Export\n  const releaseHistory = releaseHistoryPerCustomerIndexListList\n    .filter(\n      (relaseHistoryPerCustomerIndexList) =>\n        relaseHistoryPerCustomerIndexList.releaseHistory\n    )\n    .map((relaseHistoryPerCustomerIndexList) => {\n      const { customerIndexList, releaseHistory } =\n        relaseHistoryPerCustomerIndexList;\n      const customerNameJoined = getEnumNameList(\n        customerList,\n        customerIndexList\n      ).join(\", \");\n      return `<${customerNameJoined}>\n${indent(releaseHistory)}\n</${customerNameJoined}>`;\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerCustomer(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  const candidateLineupIndexList = lineupList.map((lineup) => lineup.index);\n  const releaseHistoryPerLineupList: ReleaseHistoryPerLineupIndex[] = [];\n  candidateLineupIndexList.forEach((lineupIndex) => {\n    releaseHistoryPerLineupList.push({\n      lineupIndex,\n      releaseHistory: publishPerLineup(\n        versionList,\n        versionIndex,\n        lineupIndex,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  const releaseHistory = releaseHistoryPerLineupList\n    .filter((releaseHistoryPerLineup) => releaseHistoryPerLineup.releaseHistory)\n    .map((releaseHistoryPerLineup) => {\n      const { lineupIndex, releaseHistory } = releaseHistoryPerLineup;\n      const lineupFound = lineupList.find(\n        (lineup) => lineup.index === lineupIndex\n      );\n      if (!lineupFound) {\n        return indent(releaseHistory);\n      } else {\n        const lineupName = lineupFound.name;\n        return `<${lineupName}>\n${indent(releaseHistory)}\n</${lineupName}>`;\n      }\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerLineup(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupIndex: number,\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  let versionNext = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const { index: customerIndex } = customer;\n  const changeListPerPkgList: ReleaseHistoryPerPkg[] = [];\n  while (versionNext) {\n    const { indexPrev, changeList, releaseList } = versionNext;\n    // Check the current version is released\n    const releaseFound = releaseList.find((release) => {\n      const customerIncluded =\n        release.customerIndexList.includes(customerIndex);\n      if (!customerIncluded) {\n        return false;\n      }\n      const { pkgIndex } = release;\n      const pkgFound = pkgList.find(\n        (pkg) => pkg.lineupIndex === lineupIndex && pkg.index === pkgIndex\n      );\n      return !!pkgFound;\n    });\n    // If the current version is not released, it is not for the given customer\n    if (!releaseFound) {\n      versionNext = undefined;\n    } else {\n      const { customerIndexListPerChangeList, pkgIndex } = releaseFound;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      if (!pkgFound) {\n        // This is not going to happen\n        break;\n      } else {\n        const { name: pkgName, lineupIndex: pkgLineupIndex } = pkgFound;\n        const changeListAccumulated = [\n          ...changeList.filter((change) => {\n            return customerIndexListPerChangeList.find(\n              (customerIndexListPerChange) => {\n                const { customerIndexList } = customerIndexListPerChange;\n                return (\n                  change.lineupIndex === pkgLineupIndex &&\n                  (customerIndexList.includes(customerIndex) ||\n                    customerIndexList.includes(-1))\n                );\n              }\n            );\n          }),\n        ];\n        // Accumulate unreleased versions and get the second latest released version\n        versionNext = accumulateChangeList(\n          changeListAccumulated,\n          customerIndex,\n          versionList,\n          indexPrev,\n          lineupIndex\n        );\n        changeListPerPkgList.unshift({\n          pkgName,\n          changeList: changeListAccumulated,\n        });\n      }\n    }\n  }\n  const releaseHistory = changeListPerPkgList\n    .map((changeListPerPkg, index) => {\n      const { pkgName, changeList } = changeListPerPkg;\n      const changes =\n        index === 0\n          ? \"- Initial release\"\n          : changeList\n              .map((change) => {\n                const { description, beforeChange, afterChange } = change;\n                const listToChanges = [\"[Description]\", indent(description)];\n                if (beforeChange || afterChange) {\n                  listToChanges.push(\"[Enhancement]\");\n                }\n                if (beforeChange) {\n                  listToChanges.push(indent(\"[Before change]\"));\n                  listToChanges.push(indent(indent(beforeChange)));\n                }\n                if (afterChange) {\n                  listToChanges.push(indent(\"[After change]\"));\n                  listToChanges.push(indent(indent(afterChange)));\n                }\n                return listToChanges.join(\"\\n\");\n              })\n              .join(\"\\n\");\n      if (!changes) {\n        return \"\";\n      }\n      return `${pkgName}\n${indent(changes)}`;\n    })\n    .filter((changes) => !!changes)\n    .join(\"\\n\")\n    .trim();\n  return releaseHistory;\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useState } from \"react\";\nimport { formName, formNameNew, keyActions, keyName, titleActions } from \"../constants\";\nimport { Enum } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\ntype Props = {\n  title: string;\n  enumList: Enum[];\n  onChange: (enumList: Enum[]) => void;\n  usedIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function EnumTable({\n  title,\n  enumList,\n  onChange,\n  usedIndexList,\n}: Props) {\n  const [form] = useForm();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    {\n      key: keyName,\n      dataIndex: keyName,\n      title,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addEnumItem() {\n    form\n      .validateFields([formName])\n      .then(() => {\n        const name = form.getFieldValue(formName);\n        const enumItemFound = enumList.find(\n          (enumItem) => enumItem.name === name\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          enumList.map((enumItem) => enumItem.index)\n        );\n        const enumListNew = [...enumList, { index, name }].sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        onChange(enumListNew);\n        form.setFieldsValue({ name: \"\" });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const enumItem = enumList.find((enumItem) => enumItem.index === index);\n    if (!enumItem) {\n      return;\n    }\n    form.setFieldsValue({ nameNew: enumItem.name });\n    setEditIndex(index);\n  }\n\n  function onSubmitRename() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const nameNew = form.getFieldValue(formNameNew);\n        const enumItemFound = enumList.find(\n          (enumItem) =>\n            enumItem.index !== editIndex && enumItem.name === nameNew\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const indexFound = enumList.findIndex(\n          (enumItem) => enumItem.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const enumListNew = [\n          ...enumList.slice(0, indexFound),\n          { index: editIndex, name: nameNew },\n          ...enumList.slice(indexFound + 1),\n        ];\n        onChange(enumListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeEnumItem(index: number) {\n    if (usedIndexList && usedIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = enumList.findIndex(\n      (enumItem) => enumItem.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...enumList.slice(0, indexFound),\n      ...enumList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...enumList.map((enumItem) => {\n      const { index, name } = enumItem;\n      return { key: index, name };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyName ? (\n          <Form form={form} onFinish={addEnumItem}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={addEnumItem} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyName ? (\n          <Form form={form} onFinish={onSubmitRename}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitRename}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyName ? (\n          children\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button\n              onClick={() => removeEnumItem(key)}\n              disabled={usedIndexList?.includes(key)}\n            >\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useEffect, useState } from \"react\";\nimport { formLineup, formLineupNew, formName, formNameNew, keyActions, keyLineup, keyPackage, parenError, parenNone, titleActions, titleLineup, titlePackage } from \"../constants\";\nimport { Enum, Pkg } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  pkgList: Pkg[];\n  lineupList: Enum[];\n  onChange: (pkgList: Pkg[]) => void;\n  usedPkgIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string; lineup: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function PkgTable({\n  pkgList,\n  lineupList,\n  onChange,\n  usedPkgIndexList,\n}: Props) {\n  const [form] = useForm();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList]);\n\n  const columns: any[] = [\n    {\n      key: keyPackage,\n      dataIndex: keyPackage,\n      title: titlePackage,\n    },\n    {\n      key: keyLineup,\n      dataIndex: keyLineup,\n      title: titleLineup,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addPkg() {\n    form\n      .validateFields([formName, formLineup])\n      .then(() => {\n        const { name, lineup: lineupIndex } = form.getFieldsValue([\n          formName,\n          formLineup,\n        ]);\n        const pkgFound = pkgList.find((pkg) => pkg.name === name);\n        if (pkgFound) {\n          return;\n        }\n        const index = findEmptyIndex(pkgList.map((pkg) => pkg.index));\n        const pkgListNew = [...pkgList, { index, name, lineupIndex }].sort(\n          (a, b) => a.name.localeCompare(b.name)\n        );\n        onChange(pkgListNew);\n        form.setFieldsValue({\n          name: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const pkgFound = pkgList.find((pkg) => pkg.index === index);\n    if (!pkgFound) {\n      return;\n    }\n    const { name, lineupIndex } = pkgFound;\n    form.setFieldsValue({\n      nameNew: name,\n      lineupNew: lineupIndex,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditPkg() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew, lineupNew: lineupIndexNew } = form.getFieldsValue([\n          formNameNew,\n          formLineupNew,\n        ]);\n        const pkgFound = pkgList.find(\n          (pkg) => pkg.index !== editIndex && pkg.name === nameNew\n        );\n        if (pkgFound) {\n          return;\n        }\n        const indexFound = pkgList.findIndex((pkg) => pkg.index === editIndex);\n        if (indexFound === -1) {\n          return;\n        }\n        const pkgListNew = [\n          ...pkgList.slice(0, indexFound),\n          { index: editIndex, name: nameNew, lineupIndex: lineupIndexNew },\n          ...pkgList.slice(indexFound + 1),\n        ];\n        onChange(pkgListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removePkg(index: number) {\n    if (usedPkgIndexList && usedPkgIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = pkgList.findIndex((pkg) => pkg.index === index);\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...pkgList.slice(0, indexFound),\n      ...pkgList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...pkgList.map((pkg) => {\n      const { index: key, name, lineupIndex: lineup } = pkg;\n      return { key, package: name, lineup };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form} onFinish={addPkg}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={addPkg} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitEditPkg} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          children\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removePkg(key)}\n              disabled={usedPkgIndexList?.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, ExportOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport Link from \"antd/lib/typography/Link\";\nimport { uniq } from \"lodash\";\nimport { useState } from \"react\";\nimport { formNameNew, formPrevious, formPreviousNew, formVersion, keyActions, keyPrevious, keyVersion, parenError, parenNone, titleActions, titlePrevious, titleVersion } from \"../constants\";\nimport { VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  versionList: VersionV2[];\n  onChange: (versionList: VersionV2[]) => void;\n  onPublish: (key: number) => void;\n  onSelect: (index: number) => void;\n};\n\ntype EditableCellPros = {\n  record: { key: number; version: string; previous: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function VersionTable({\n  versionList,\n  onChange,\n  onPublish,\n  onSelect,\n}: Props) {\n  const [form] = useForm();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyPrevious, dataIndex: keyPrevious, title: titlePrevious },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addVersion() {\n    form\n      .validateFields([formVersion])\n      .then(() => {\n        const { version: name, previous: indexPrev } = form.getFieldsValue([\n          formVersion,\n          formPrevious,\n        ]);\n        const versionFound = versionList.find(\n          (version) => version.name === name\n        );\n        if (versionFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          versionList.map((version) => version.index)\n        );\n        const versionListNew: VersionV2[] = [\n          ...versionList,\n          { index, name, indexPrev, changeList: [], releaseList: [] },\n        ];\n        form.setFieldsValue({ version: \"\" });\n        onChange(versionListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(key: number) {\n    const versionFound = versionList.find((version) => version.index === key);\n    if (!versionFound) {\n      return;\n    }\n    const { name: nameNew, indexPrev: previousNew } = versionFound;\n    form.setFieldsValue({ nameNew, previousNew });\n    setEditIndex(key);\n  }\n\n  function onClickPublish(key: number) {\n    onPublish(key);\n  }\n\n  function onSubmitEditVersion() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew: name, previousNew: indexPrev } = form.getFieldsValue([\n          formNameNew,\n          formPreviousNew,\n        ]);\n        const nameInUse = versionList.find(\n          (version) => version.index !== editIndex && version.name === name\n        );\n        if (nameInUse) {\n          return;\n        }\n        const indexFound = versionList.findIndex(\n          (version) => version.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const version = versionList[indexFound];\n        const { changeList, releaseList } = version;\n        const versionListNew: VersionV2[] = [\n          ...versionList.slice(0, indexFound),\n          { index: editIndex, name, indexPrev, changeList, releaseList },\n          ...versionList.slice(indexFound + 1),\n        ];\n        onChange(versionListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeVersion(index: number) {\n    const versionFound = versionList.find(\n      (version) => version.indexPrev === index\n    );\n    if (versionFound) {\n      return;\n    }\n    const indexFound = versionList.findIndex(\n      (version) => version.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      ...versionList.slice(indexFound + 1, 0),\n    ];\n    onChange(versionListNew);\n  }\n\n  const usedVersionIndexList = uniq(\n    versionList\n      .filter((version) => {\n        const { index } = version;\n        return !!versionList.find((version) => version.indexPrev === index);\n      })\n      .map((version) => version.index)\n  );\n\n  const dataSource = [\n    { key: -1 },\n    ...versionList.map((version) => {\n      const { index, name, indexPrev } = version;\n      return { key: index, version: name, previous: indexPrev };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellPros) {\n    const { key, previous: indexPrev } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formVersion} rules={[{ required: true }]} help={false}>\n              <Input disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPrevious} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addVersion} disabled={editIndex !== -1} icon={<PlusOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPreviousNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index} disabled={index === key}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitEditVersion} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <Link onClick={() => onSelect(key)}>{children}</Link>\n        ) : dataIndex === keyPrevious ? (\n          indexPrev === -1 ? (\n            parenNone\n          ) : (\n            versionList.find((version) => version.index === indexPrev)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removeVersion(key)}\n              disabled={usedVersionIndexList.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n            <Button onClick={() => onClickPublish(key)} icon={<ExportOutlined />} />\n          </>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { FileOutlined, FolderOpenOutlined, SaveOutlined } from \"@ant-design/icons\";\nimport { Input, Menu } from \"antd\";\nimport { createRef, useState } from \"react\";\nimport { Enum, Pkg, VersionV2 } from \"../types\";\nimport { load } from \"../utils\";\n\ntype Props = {\n  customerList: Enum[];\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  versionList: VersionV2[];\n  onNew: () => void;\n  onLoad: (content: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n  }) => void;\n};\n\nconst UNTITLED = \"Untitled\";\n\nexport default function AppMenu({\n  customerList,\n  lineupList,\n  pkgList,\n  versionList,\n  onNew,\n  onLoad,\n}: Props) {\n  const refLoad = createRef<HTMLInputElement>();\n  let file: File | undefined;\n  const refSave = createRef<HTMLAnchorElement>();\n\n  const [featureName, setFeatureName] = useState(UNTITLED);\n\n  function onChangeFile(e: React.ChangeEvent<HTMLInputElement>) {\n    file = e.target.files?.[0];\n    if (!file) {\n      return;\n    }\n    reader.readAsText(file);\n  }\n\n  function onClickSave() {\n    if (refSave.current === null) {\n      return;\n    }\n    const blob = new Blob(\n      [JSON.stringify({ versionList, lineupList, pkgList, customerList })],\n      { type: \"application/json\" }\n    );\n    refSave.current.download = `${featureName}.json`;\n    refSave.current.href = window.URL.createObjectURL(blob);\n    refSave.current.click();\n  }\n\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    if (!file) {\n      return;\n    }\n    const result = e.target?.result;\n    if (typeof result !== \"string\") {\n      return;\n    }\n    const { name } = file;\n    const indexLast = name.lastIndexOf(\".\");\n    const featureName = name.substring(0, indexLast);\n    const { versionList, lineupList, pkgList, customerList } = load(result);\n    setFeatureName(featureName);\n    onLoad({ customerList, lineupList, pkgList, versionList });\n  };\n\n  return (\n    <>\n      <Menu mode=\"horizontal\" selectable={false}>\n        <Menu.Item key=\"new\" onClick={onNew} icon={<FileOutlined />} />\n        <Menu.Item key=\"load\" onClick={() => refLoad.current?.click()} icon={<FolderOpenOutlined />} />\n        <Menu.Item key=\"featureName\" disabled>\n          <Input\n            value={featureName}\n            onChange={(e) => setFeatureName(e.target.value)}\n          />\n        </Menu.Item>\n        <Menu.Item key=\"save\" onClick={() => onClickSave()} icon={<SaveOutlined />} />\n      </Menu>\n      <input\n        type=\"file\"\n        accept=\".json\"\n        hidden\n        ref={refLoad}\n        onChange={onChangeFile}\n      />\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content, jsx-a11y/anchor-is-valid */}\n      <a href=\"#\" ref={refSave} hidden />\n    </>\n  );\n}\n","import { CheckOutlined, CloseOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Badge, Button, Form, Popover, Select, Table, Tag, Typography } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport {\n  formCustomerIndexList,\n  keyActions,\n  keyCustomers,\n  keyDescription,\n  keyVersion,\n  parenError,\n  parenGlobal,\n  titleActions,\n  titleCustomers,\n  titleDescription,\n  titleVersion,\n} from \"../constants\";\nimport {\n  ChangeV2,\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  VersionV2,\n} from \"../types\";\nimport { accumulateVersionIndex } from \"../utils\";\nconst { Option } = Select;\nconst { Text } = Typography;\n\ntype ChangePerReleaseTableProps = {\n  customerList: Enum[];\n  pkgList: Pkg[];\n  releaseIndex: number;\n  versionIndex: number;\n  versionList: VersionV2[];\n  onChange: (\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    changeIndex: number;\n    description: string;\n    beforeChange: string;\n    afterChange: string;\n    version: number;\n    customerIndexList: number[];\n  };\n  dataIndex: string;\n  children: any;\n};\n\ntype PopoverContentProps = {\n  beforeChange: string;\n  afterChange: string;\n};\n\nexport default function ChangePerReleaseTable({\n  customerList,\n  pkgList,\n  releaseIndex,\n  versionIndex,\n  versionList,\n  onChange,\n}: ChangePerReleaseTableProps) {\n  const [form] = useForm();\n  const [editVersionIndex, setEditVersionIndex] = useState(-1);\n  const [editChangeIndex, setEditChangeIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }, [customerList, pkgList, releaseIndex, versionIndex, versionList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n  const releaseFound = releaseList.find(\n    (release) => release.index === releaseIndex\n  );\n  const customerIndexListPerChangeList =\n    releaseFound?.customerIndexListPerChangeList ?? [];\n  const pkgIndex = releaseFound?.pkgIndex ?? undefined;\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyDescription, dataIndex: keyDescription, title: titleDescription },\n    { key: keyCustomers, dataIndex: keyCustomers, title: titleCustomers },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function onCancelEdit() {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }\n\n  function onClickEdit(versionIndex: number, changeIndex: number) {\n    const customerIndexListPerChangeFound = customerIndexListPerChangeList.find(\n      (item) => {\n        return (\n          item.versionIndex === versionIndex && item.changeIndex === changeIndex\n        );\n      }\n    );\n    if (customerIndexListPerChangeFound) {\n      const { customerIndexList } = customerIndexListPerChangeFound;\n      form.setFieldsValue({ customerIndexList });\n    }\n    setEditVersionIndex(versionIndex);\n    setEditChangeIndex(changeIndex);\n  }\n\n  function onSubmitChange(versionIndexOfChange: number, changeIndex: number) {\n    const versionOfChangeFound = versionList.find(\n      (version) => version.index === versionIndexOfChange\n    );\n    if (!versionOfChangeFound) {\n      return;\n    }\n    const { changeList } = versionOfChangeFound;\n    const changeFound = changeList.find(\n      (change) => change.index === changeIndex\n    );\n    if (!changeFound) {\n      return;\n    }\n    if (!releaseFound) {\n      return;\n    }\n    const customerIndexListRaw = form.getFieldValue(formCustomerIndexList);\n    const customerIndexList = customerIndexListRaw.includes(-1)\n      ? [-1]\n      : customerIndexListRaw;\n    const { customerIndexListPerChangeList } = releaseFound;\n    const indexFound = customerIndexListPerChangeList.findIndex((item) => {\n      return (\n        item.versionIndex === versionIndexOfChange &&\n        item.changeIndex === changeIndex\n      );\n    });\n    const customerIndexListPerChangeListNew =\n      indexFound === -1\n        ? [\n            ...customerIndexListPerChangeList,\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n          ]\n        : [\n            ...customerIndexListPerChangeList.slice(0, indexFound),\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n            ...customerIndexListPerChangeList.slice(indexFound + 1),\n          ];\n    onChange(customerIndexListPerChangeListNew);\n  }\n\n  /**\n   * versionIndexList[0]: Current version\n   * versionIndexList[n]: Previous version of versionIndexList[n-1]\n   */\n  const versionIndexList = accumulateVersionIndex(versionList, versionIndex);\n  const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n  const changeListFiltered = versionIndexList.reduce(\n    (changeListPrev: (ChangeV2 & { versionIndex: number })[], versionIndex) => {\n      const versionFound = versionList.find(\n        (version) => version.index === versionIndex\n      );\n      if (!versionFound) {\n        return changeListPrev;\n      }\n      const { changeList } = versionFound;\n      const changeListCurr = changeList.filter((change) => {\n        return change.lineupIndex === pkgFound?.lineupIndex;\n      });\n      return [\n        ...changeListPrev,\n        ...changeListCurr.map((change) => {\n          return { versionIndex, ...change };\n        }),\n      ];\n    },\n    []\n  );\n  const dataSource = [\n    ...changeListFiltered.map((change) => {\n      const {\n        index: changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        versionIndex: versionIndexOfChange,\n      } = change;\n      const customerIndexList =\n        customerIndexListPerChangeList.find((item) => {\n          return (\n            item.versionIndex === versionIndexOfChange &&\n            item.changeIndex === changeIndex\n          );\n        })?.customerIndexList ?? [];\n      return {\n        changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        version: versionIndexOfChange,\n        customerIndexList,\n      };\n    }),\n  ];\n\n  const customerIndexListPerRelease = releaseFound?.customerIndexList ?? [];\n  const customerListPerRelease = customerList.filter((customer) => {\n    return customerIndexListPerRelease.includes(customer.index);\n  });\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    // FIXME: No idea why the following check is required to render 'No Data'\n    if (!record) {\n      return (\n        <td colSpan={columns.length} {...restProps}>\n          {children}\n        </td>\n      );\n    }\n    const {\n      changeIndex,\n      beforeChange,\n      afterChange,\n      version: versionIndexOfChange,\n      customerIndexList,\n    } = record;\n    const versionFound = versionList.find((version) => version.index === versionIndexOfChange);\n    return (\n      <td {...restProps}>\n        {editVersionIndex === versionIndexOfChange &&\n        editChangeIndex === changeIndex &&\n        dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name={formCustomerIndexList}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                <Option key={-1} value={-1}>\n                  {parenGlobal}\n                </Option>\n                {customerListPerRelease.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editVersionIndex === versionIndexOfChange &&\n          editChangeIndex === changeIndex &&\n          dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={() => onSubmitChange(versionIndexOfChange, changeIndex)} icon={<CheckOutlined />} />\n              <Button onClick={onCancelEdit} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <>\n            {versionFound?.name ?? parenError}\n            {' '}\n            {versionIndexOfChange === versionIndex ? <Badge color=\"blue\" /> : null}\n          </>\n        ) : dataIndex === keyDescription ? (\n          <Popover\n            content={() => (\n              <PopoverContent\n                beforeChange={beforeChange}\n                afterChange={afterChange}\n              />\n            )}\n          >\n            {children}\n          </Popover>\n        ) : dataIndex === keyCustomers ? (\n          /**TODO\n           * Render previous customers in grey\n           * Render current customers in blue\n           */\n          customerIndexList.map((customerIndex) => {\n            const customerFound =\n              customerIndex === -1\n                ? { name: parenGlobal }\n                : customerList.find(\n                    (customer) => customer.index === customerIndex\n                  );\n            return (\n              <Tag key={customerIndex} color=\"blue\">{customerFound?.name ?? parenError}</Tag>\n            );\n          })\n        ) : dataIndex === keyActions ? (\n          <Button onClick={() => onClickEdit(versionIndexOfChange, changeIndex)} icon={<EditOutlined />} />\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n\n  function PopoverContent({ beforeChange, afterChange }: PopoverContentProps) {\n    return (\n      <>\n        <Text strong>Before change</Text>\n        <br />\n        <TextArea value={beforeChange} cols={80} autoSize />\n        <br />\n        <Text strong>After change</Text>\n        <br />\n        <TextArea value={afterChange} cols={80} autoSize />\n      </>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, MenuOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport {\n  useSensors,\n  useSensor,\n  PointerSensor,\n  KeyboardSensor,\n  DndContext,\n  closestCenter,\n  DragOverlay,\n} from \"@dnd-kit/core\";\nimport {\n  sortableKeyboardCoordinates,\n  arrayMove,\n  SortableContext,\n  verticalListSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { Button, Form, Select, Table, Tag } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useEffect, useState } from \"react\";\nimport {\n  invalidSortable,\n  keyActions,\n  keyCustomers,\n  keyDragHandle,\n  keyPackage,\n  parenError,\n  parenNone,\n  titleActions,\n  titleCustomers,\n  titlePackage,\n} from \"../constants\";\nimport {\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  ReleaseV2,\n  VersionV2,\n} from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nimport ChangePerReleaseTable from \"./ChangePerReleaseTable\";\n\nconst { Option } = Select;\n\ntype Props = {\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  customerList: Enum[];\n  usedPkgIndexList: number[];\n  versionList: VersionV2[];\n  versionIndex: number;\n  onChange: (releaseList: ReleaseV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    package: number;\n    pkgName: string;\n    customers: number[];\n    lineup: string;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ReleaseTable({\n  lineupList,\n  pkgList,\n  customerList,\n  usedPkgIndexList,\n  versionList,\n  versionIndex,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n  // ID to render overlay.\n  const [activeId, setActiveId] = useState(null);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  function onDragStart(event: any) {\n    const { active } = event;\n    setActiveId(active.id);\n  }\n\n  function onDragEnd(event: any) {\n    const { active, over } = event;\n    if (active.id !== over.id) {\n      const oldIndex = releaseList.findIndex(\n        (release) => release.index.toString() === active.id\n      );\n      const newIndex = releaseList.findIndex(\n        (release) => release.index.toString() === over.id\n      );\n      const releaseListNew = arrayMove(releaseList, oldIndex, newIndex);\n      onChange(releaseListNew);\n    }\n    // Stop overlay.\n    setActiveId(null);\n  }\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList, pkgList, customerList, versionList, versionIndex]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n\n  const columns: any[] = [\n    { key: keyPackage, dataIndex: keyPackage, title: titlePackage },\n    {\n      key: keyCustomers,\n      dataIndex: keyCustomers,\n      title: titleCustomers,\n      width: \"50%\",\n    },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n    { key: keyDragHandle, dataIndex: keyDragHandle, title: \"\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addRelease() {\n    form\n      .validateFields([\"pkgIndex\", \"customerList\"])\n      .then(() => {\n        const { pkgIndex, customerList: customerIndexList } =\n          form.getFieldsValue([\"pkgIndex\", \"customerList\"]);\n        if (pkgIndex === -1) {\n          return;\n        }\n        // Check if package is already in use\n        const pkgInUse = versionList.find((version) => {\n          const { releaseList } = version;\n          return releaseList.find((release) => release.pkgIndex === pkgIndex);\n        });\n        if (pkgInUse) {\n          return;\n        }\n        const index = findEmptyIndex(\n          releaseList.map((release) => release.index)\n        );\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList,\n          {\n            index,\n            pkgIndex,\n            customerIndexList,\n            customerIndexListPerChangeList: [],\n          },\n        ];\n        onChange(releaseListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onChangeCustomerIndexListPerChangeList(\n    releaseIndex: number,\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === releaseIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const release = releaseList[indexFound];\n    const { index, pkgIndex, customerIndexList } = release;\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      { index, pkgIndex, customerIndexList, customerIndexListPerChangeList },\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  function onClickEdit(index: number) {\n    const releaseFound = releaseList.find((release) => release.index === index);\n    if (!releaseFound) {\n      return;\n    }\n    const { pkgIndex: pkgIndexNew, customerIndexList: customerIndexListNew } =\n      releaseFound;\n    const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndexNew);\n    if (!pkgFound) {\n      return;\n    }\n    form.setFieldsValue({ pkgIndexNew, customerIndexListNew });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditRelease() {\n    form\n      .validateFields([\"pkgIndexNew\", \"customerIndexListNew\"])\n      .then(() => {\n        const { pkgIndexNew, customerIndexListNew } = form.getFieldsValue([\n          \"pkgIndexNew\",\n          \"customerIndexListNew\",\n        ]);\n        const releaseFound = releaseList.find(\n          (release) =>\n            release.index !== editIndex && release.pkgIndex === pkgIndexNew\n        );\n        if (releaseFound) {\n          return;\n        }\n        const indexFound = releaseList.findIndex(\n          (release) => release.index === editIndex\n        );\n        const { customerIndexListPerChangeList } = releaseList[indexFound];\n        if (indexFound === -1) {\n          return;\n        }\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList.slice(0, indexFound),\n          {\n            index: editIndex,\n            pkgIndex: pkgIndexNew,\n            customerIndexList: customerIndexListNew,\n            customerIndexListPerChangeList,\n          },\n          ...releaseList.slice(indexFound + 1),\n        ];\n        onChange(releaseListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeRelease(index: number) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...releaseList.map((release) => {\n      const { index: key, pkgIndex, customerIndexList: customers } = release;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      const pkgName = pkgFound?.name;\n      const lineupIndex = pkgFound?.lineupIndex;\n      const lineup =\n        lineupIndex === -1\n          ? parenNone\n          : lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError;\n      return { key, package: pkgIndex, pkgName, customers, lineup };\n    }),\n  ];\n\n  const releaseToDragFound = releaseList.find((release) => release.index === Number(activeId));\n  const pkgToDragFound = pkgList.find((pkg) => pkg.index === releaseToDragFound?.pkgIndex);\n  const pkgNameToDrag = pkgToDragFound?.name;\n  const lineupIndexToDrag = pkgToDragFound?.lineupIndex;\n  const lineupToDrag = lineupList.find((lineup) => lineup.index === lineupIndexToDrag)?.name;\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    >\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        components={{\n          body: {\n            wrapper: DraggableWrapper,\n            row: DraggableRow,\n            cell: EditableCell,\n          },\n        }}\n        expandable={{\n          expandedRowRender,\n          rowExpandable: (record) => record.key !== -1,\n        }}\n        pagination={false}\n        size=\"small\"\n      />\n      {/* Render overlay component. */}\n      <DragOverlay\n        style={{\n          backgroundColor: \"#e0e0e07f\",\n          border: \"1px solid #e9e9e9\",\n          display: \"flex\",\n          alignItems: \"center\",\n          paddingLeft: 30,\n        }}\n      >\n        {pkgNameToDrag} <Tag>{lineupToDrag}</Tag>\n      </DragOverlay>\n    </DndContext>\n  );\n\n  function DraggableWrapper(props: any) {\n    const { children, ...restProps } = props;\n    return (\n      <SortableContext\n        // `children[1]` is `dataSource`.\n        items={children[1].map((child: any) => child.key.toString())}\n        strategy={verticalListSortingStrategy}\n        {...restProps}\n      >\n        <tbody {...restProps}>\n          {\n            // This invokes `Table.components.body.row` for each element of `children`.\n            children\n          }\n        </tbody>\n      </SortableContext>\n    );\n  }\n\n  function DraggableRow(props: any) {\n    const { children, style, ...restProps } = props;\n    const id = props[\"data-row-key\"]?.toString() ?? invalidSortable;\n    const { attributes, listeners, setNodeRef } = useSortable({ id });\n    const styleRowBold = Number(id) > -1 ? { fontWeight: \"bold\" } : null;\n    const styleNew = Object.assign({}, style, styleRowBold);\n    return (\n      <tr ref={setNodeRef} {...attributes} {...restProps} style={styleNew}>\n        {id === invalidSortable\n          ? children\n          : children.map((child: any) => {\n              const { children, ...restProps } = child;\n              const { key } = restProps;\n              return key === keyDragHandle ? (\n                <td {...listeners} {...restProps}>\n                  {child}\n                </td>\n              ) : (\n                <td {...restProps}>{child}</td>\n              );\n            })}\n      </tr>\n    );\n  }\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    if (!record) {\n      return children;\n    }\n    const { key, pkgName, customers: customerIndexList, lineup } = record;\n    return (\n      <>\n        {/* <td {...restProps}> */}\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"pkgIndex\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select disabled={editIndex !== -1}>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option\n                      key={index}\n                      value={index}\n                      disabled={usedPkgIndexList.includes(index)}\n                    >\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerList\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n                disabled={editIndex !== -1}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addRelease} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyDragHandle ? null : editIndex ===\n            key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name=\"pkgIndexNew\">\n              <Select>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option key={index} value={index}>\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerIndexListNew\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitEditRelease}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          <>\n            {pkgName} <Tag>{lineup}</Tag>\n          </>\n        ) : dataIndex === keyCustomers ? (\n          customerIndexList\n            .map((customerIndex) => {\n              const customerFound = customerList.find(\n                (customer) => customer.index === customerIndex\n              );\n              return (\n                customerFound && (\n                  <Tag key={customerFound.index}>{customerFound.name}</Tag>\n                )\n              );\n            })\n            .filter((customerTag) => !!customerTag)\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button onClick={() => removeRelease(key)}>\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : dataIndex === keyDragHandle ? (\n          <MenuOutlined style={{ cursor: \"grab\" }} />\n        ) : (\n          children\n        )}\n        {/* </td> */}\n      </>\n    );\n  }\n\n  function expandedRowRender(record: any) {\n    const { key: releaseIndex } = record;\n    return (\n      <td colSpan={columns.length + 1}>\n        <ChangePerReleaseTable\n          customerList={customerList}\n          pkgList={pkgList}\n          releaseIndex={releaseIndex}\n          versionIndex={versionIndex}\n          versionList={versionList}\n          onChange={(customerIndexListPerChangeList) =>\n            onChangeCustomerIndexListPerChangeList(\n              releaseIndex,\n              customerIndexListPerChangeList\n            )\n          }\n        />\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport { formAfterChange, formAfterChangeNew, formBeforeChange, formBeforeChangeNew, formDescription, formDescriptionNew, formLineup, formLineupNew, keyActions, keyAfterChange, keyBeforeChange, keyDescription, keyLineup, parenError, parenNone, titleActions, titleAfterChange, titleBeforeChange, titleDescription, titleLineup } from \"../constants\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nconst { Option } = Select;\n\ntype Props = {\n  versionIndex: number;\n  versionList: VersionV2[];\n  lineupList: Enum[];\n  usedChangeIndexWithVersionIndexList: Omit<CustomerIndexListPerChange, \"customerIndexList\">[];\n  onChange: (changeList: ChangeV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    descriptoin: string;\n    beforeChange: string;\n    afterChange: string;\n    lineup: number;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ChangeTable({\n  versionIndex,\n  versionList,\n  lineupList,\n  usedChangeIndexWithVersionIndexList,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [versionIndex, versionList, lineupList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const changeList = versionFound?.changeList ?? [];\n\n  const columns: any[] = [\n    {\n      key: keyDescription,\n      dataIndex: keyDescription,\n      title: titleDescription,\n      width: \"25%\",\n    },\n    {\n      key: keyBeforeChange,\n      dataIndex: keyBeforeChange,\n      title: titleBeforeChange,\n      width: \"25%\",\n    },\n    {\n      key: keyAfterChange,\n      dataIndex: keyAfterChange,\n      title: titleAfterChange,\n      width: \"25%\",\n    },\n    { key: keyLineup, dataIndex: keyLineup, title: titleLineup, width: \"12.5%\" },\n    { key: keyActions, dataIndex: keyActions, title: titleActions, width: \"12.5%\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addChange() {\n    form\n      .validateFields([formDescription, formLineup])\n      .then(() => {\n        const {\n          description,\n          beforeChange,\n          afterChange,\n          lineup: lineupIndex,\n        } = form.getFieldsValue([\n          formDescription,\n          formBeforeChange,\n          formAfterChange,\n          formLineup,\n        ]);\n        const index = findEmptyIndex(changeList.map((change) => change.index));\n        const changeListNew: ChangeV2[] = [\n          ...changeList,\n          { index, description, beforeChange, afterChange, lineupIndex },\n        ];\n        onChange(changeListNew);\n        form.setFieldsValue({\n          description: \"\",\n          beforeChange: \"\",\n          afterChange: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const changeFound = changeList.find((change) => change.index === index);\n    if (!changeFound) {\n      return;\n    }\n    const {\n      description: descriptionNew,\n      beforeChange: beforeChangeNew,\n      afterChange: afterChangeNew,\n      lineupIndex: lineupNew,\n    } = changeFound;\n    form.setFieldsValue({\n      descriptionNew,\n      beforeChangeNew,\n      afterChangeNew,\n      lineupNew,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditChange() {\n    form\n      .validateFields([\n        formDescriptionNew,\n        formLineupNew,\n      ])\n      .then(() => {\n        const {\n          descriptionNew: description,\n          beforeChangeNew: beforeChange,\n          afterChangeNew: afterChange,\n          lineupNew: lineupIndex,\n        } = form.getFieldsValue([\n          formDescriptionNew,\n          formBeforeChangeNew,\n          formAfterChangeNew,\n          formLineupNew,\n        ]);\n        const indexFound = changeList.findIndex(\n          (change) => change.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const changeListNew: ChangeV2[] = [\n          ...changeList.slice(0, indexFound),\n          {\n            index: editIndex,\n            description,\n            beforeChange,\n            afterChange,\n            lineupIndex,\n          },\n          ...changeList.slice(indexFound + 1),\n        ];\n        onChange(changeListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeChange(index: number) {\n    const indexFound = changeList.findIndex((change) => change.index === index);\n    const changeListNew = [\n      ...changeList.slice(0, indexFound),\n      ...changeList.slice(indexFound + 1),\n    ];\n    onChange(changeListNew);\n  }\n\n  const dataSource: any[] = [\n    { key: -1 },\n    ...changeList.map((change) => {\n      const {\n        index: key,\n        description,\n        beforeChange,\n        afterChange,\n        lineupIndex: lineup,\n      } = change;\n      return { key, description, beforeChange, afterChange, lineup };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps} style={{ verticalAlign: \"top\" }}>\n        {key === -1 && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescription}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addChange} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescriptionNew}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={onSubmitEditChange} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyDescription ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyBeforeChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyAfterChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n              <Button\n                onClick={() => removeChange(key)} icon={<DeleteOutlined />}\n                disabled={\n                  !!usedChangeIndexWithVersionIndexList.find((item) => {\n                    return item.versionIndex === versionIndex && item.changeIndex === key\n                  })\n                }\n              />\n            </Form.Item>\n          </Form>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { Enum, Pkg, VersionV2 } from \"./types\";\n\nexport const customerListInit: Enum[] = [];\nexport const lineupListInit: Enum[] = [];\nexport const pkgListInit: Pkg[] = [];\nexport const versionListInit: VersionV2[] = [];\n","import { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { Button, Col, Collapse, Modal, Row, Space, Tabs, Tag } from \"antd\";\nimport { CopyOutlined, GithubOutlined } from \"@ant-design/icons\";\nimport EnumTable from \"./components/EnumTable\";\nimport PkgTable from \"./components/PkgTable\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, Pkg, ReleaseV2, VersionV2 } from \"./types\";\nimport Title from \"antd/lib/typography/Title\";\nimport Link from \"antd/lib/typography/Link\";\nimport VersionTable from \"./components/VersionTable\";\nimport AppMenu from \"./components/AppMenu\";\nimport ReleaseTable from \"./components/ReleaseTable\";\nimport ChangeTable from \"./components/ChangeTable\";\nimport {\n  customerListInit,\n  lineupListInit,\n  pkgListInit,\n  versionListInit,\n} from \"./init\";\nimport { uniq, uniqWith } from \"lodash\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { publish } from \"./utils\";\nimport { keyChanges, keyReleases, keyVersions, parenError, keyHistory, keyLineups, keyPackages, keyCustomers, titleHistory, titleVersions, titleChanges, titleReleases, titleCustomers, titleCustomer, titleLineups, titleLineup, titlePackages } from \"./constants\";\nconst { Panel } = Collapse;\n\nfunction App() {\n  const [versionList, setVersionList] = useState<VersionV2[]>(versionListInit);\n  const [versionIndex, setVersionIndex] = useState(-1);\n  const [lineupList, setLineupList] = useState<Enum[]>(lineupListInit);\n  const [pkgList, setPkgList] = useState<Pkg[]>(pkgListInit);\n  const [customerList, setCustomerList] = useState<Enum[]>(customerListInit);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [releaseHistory, setReleaseHistory] = useState(\"\");\n\n  function onChangeChangeList(changeList: ChangeV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.changeList = changeList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeReleaseList(releaseList: ReleaseV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.releaseList = releaseList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeVersionList(versionList: VersionV2[]) {\n    const versionFound = versionList.find(\n      (version) => version.index === versionIndex\n    );\n    if (!versionFound) {\n      setVersionIndex(-1);\n    }\n    setVersionList(versionList);\n  }\n\n  function onLoad({\n    customerList,\n    lineupList,\n    pkgList,\n    versionList,\n  }: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n  }) {\n    setVersionIndex(-1);\n    setCustomerList(customerList);\n    setLineupList(lineupList);\n    setPkgList(pkgList);\n    setVersionList(versionList);\n  }\n\n  function onNew() {\n    setVersionIndex(-1);\n    setCustomerList([]);\n    setLineupList([]);\n    setPkgList([]);\n    setVersionList([]);\n  }\n\n  function onPublish(versionIndex: number) {\n    const releaseHistory = publish(\n      versionList,\n      versionIndex,\n      lineupList,\n      pkgList,\n      customerList\n    );\n    setReleaseHistory(releaseHistory ?? parenError);\n    setModalVisible(true);\n  }\n\n  function onSelectVersion(index: number) {\n    setVersionIndex(index);\n  }\n\n  type ChangeIndexWithVersionIndex = Omit<CustomerIndexListPerChange, \"customerIndexList\">;\n  const usedChangeIndexWithVersionIndexList: ChangeIndexWithVersionIndex[] =\n    uniqWith(\n      versionList.reduce(\n        (changeIndexListPrev: ChangeIndexWithVersionIndex[], version) => {\n          const { releaseList } = version;\n          const changeIndexListPerReleaseList = releaseList.reduce(\n            (\n              changeIndexListPerReleasePrev: ChangeIndexWithVersionIndex[],\n              release\n            ) => {\n              const { customerIndexListPerChangeList } = release;\n              return [\n                ...changeIndexListPerReleasePrev,\n                ...customerIndexListPerChangeList\n                  .filter((item) => {\n                    const { customerIndexList } = item;\n                    return customerIndexList && customerIndexList.length;\n                  })\n                  .map((item) => {\n                    const { versionIndex, changeIndex } = item;\n                    return { versionIndex, changeIndex };\n                  }),\n              ];\n            },\n            []\n          );\n          return [...changeIndexListPrev, ...changeIndexListPerReleaseList];\n        },\n        []\n      ),\n      (a, b) => a.versionIndex === b.versionIndex && a.changeIndex === b.changeIndex\n    );\n  const usedLineupIndexList = uniq([\n    ...versionList.reduce((lineupIndexListPrev: number[], version) => {\n      const { changeList } = version;\n      return [\n        ...lineupIndexListPrev,\n        ...changeList.map((change) => {\n          return change.lineupIndex;\n        }),\n      ];\n    }, []),\n    ...pkgList.map((pkg) => pkg.lineupIndex),\n  ]);\n  const usedPkgIndexList = uniq(\n    versionList.reduce((pkgIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...pkgIndexListPrev,\n        ...releaseList.map((release) => release.pkgIndex),\n      ];\n    }, [])\n  );\n  const usedCustomerIndexList = uniq(\n    versionList.reduce((customerIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...customerIndexListPrev,\n        ...releaseList.reduce(\n          (customerIndexListPerReleasePrev: number[], release) => {\n            const { customerIndexList, customerIndexListPerChangeList } =\n              release;\n            return [\n              ...customerIndexListPerReleasePrev,\n              ...customerIndexList,\n              ...customerIndexListPerChangeList.reduce(\n                (customerIndexListPerChangeListPrev: number[], item) => {\n                  const { customerIndexList } = item;\n                  return [\n                    ...customerIndexListPerChangeListPrev,\n                    ...customerIndexList,\n                  ];\n                },\n                []\n              ),\n            ];\n          },\n          []\n        ),\n      ];\n    }, [])\n  );\n\n  const versionCurr = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const versionPrev =\n    !versionCurr || versionCurr.indexPrev === -1\n      ? undefined\n      : versionList.find(\n          (version) => version.index === versionCurr.indexPrev\n        ) ?? -1;\n  return (\n    <div className=\"App\">\n      <AppMenu\n        customerList={customerList}\n        lineupList={lineupList}\n        pkgList={pkgList}\n        versionList={versionList}\n        onNew={onNew}\n        onLoad={onLoad}\n      />\n      <Row>\n        <Col span={16} offset={4}>\n          <Tabs defaultActiveKey={keyHistory}>\n            <Tabs.TabPane tab={titleHistory} key={keyHistory}>\n              <Title level={2}>History</Title>\n              <Collapse defaultActiveKey={[keyVersions]}>\n                <Panel key={keyVersions} header={titleVersions}>\n                  <VersionTable\n                    versionList={versionList}\n                    onChange={onChangeVersionList}\n                    onPublish={onPublish}\n                    onSelect={onSelectVersion}\n                  />\n                </Panel>\n              </Collapse>\n              {!versionCurr ? null : (\n                <>\n                  <Title level={3}>{versionCurr.name}</Title>\n                  {!versionPrev ? null : (\n                    <>\n                      Previous{\" \"}\n                      <Tag>\n                        {versionPrev === -1 ? parenError : versionPrev.name}\n                      </Tag>\n                    </>\n                  )}\n                  <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                    <Collapse defaultActiveKey={[keyChanges]}>\n                      <Panel key={keyChanges} header={titleChanges}>\n                        <ChangeTable\n                          versionIndex={versionIndex}\n                          versionList={versionList}\n                          lineupList={lineupList}\n                          usedChangeIndexWithVersionIndexList={usedChangeIndexWithVersionIndexList}\n                          onChange={onChangeChangeList}\n                        />\n                      </Panel>\n                    </Collapse>\n                    <Collapse defaultActiveKey={[keyReleases]}>\n                      <Panel key={keyReleases} header={titleReleases}>\n                        <ReleaseTable\n                          lineupList={lineupList}\n                          pkgList={pkgList}\n                          customerList={customerList}\n                          usedPkgIndexList={usedPkgIndexList}\n                          versionList={versionList}\n                          versionIndex={versionIndex}\n                          onChange={onChangeReleaseList}\n                          // onChangeVersionList={setVersionList}\n                        />\n                      </Panel>\n                    </Collapse>\n                  </Space>\n                </>\n              )}\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleCustomers} key={keyCustomers}>\n              <Title level={2}>Customers</Title>\n              <EnumTable\n                title={titleCustomer}\n                enumList={customerList}\n                onChange={setCustomerList}\n                usedIndexList={usedCustomerIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleLineups} key={keyLineups}>\n              <Title level={2}>Lineups</Title>\n              <EnumTable\n                title={titleLineup}\n                enumList={lineupList}\n                onChange={setLineupList}\n                usedIndexList={usedLineupIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titlePackages} key={keyPackages}>\n              <Title level={2}>Packages</Title>\n              <PkgTable\n                pkgList={pkgList}\n                lineupList={lineupList}\n                onChange={setPkgList}\n                usedPkgIndexList={usedPkgIndexList}\n              />\n            </Tabs.TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: \"1em\" }}>\n        <Col span={24} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Link\n            href=\"https://github.com/gsongsong/rhm\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <GithubOutlined />\n          </Link>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Release history\"\n        footer={\n          <Button>\n            <CopyOutlined />\n            Copy to clipboard\n          </Button>\n        }\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        width={960}\n      >\n        <TextArea value={releaseHistory} cols={80} autoSize={true} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}